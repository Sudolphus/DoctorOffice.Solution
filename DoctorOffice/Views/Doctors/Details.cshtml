@{
  Layout = "_Layout";
}

@model DoctorOffice.Models.Doctor

<h1>Doctor Details</h1>
<hr />
<h2>@Html.DisplayFor(model => model.Name)</h2>

@if(@Model.PatientsSpecialties.Count() == 0)
{
  <p>nobody wants this guy to fix their boo-boos</p>
}
else
{
  <h4>Current Patients:</h4>
  <ul>
    @foreach(var join in Model.PatientsSpecialties)
    {
      <li>@Html.ActionLink($"{join.Patient.Name}", "Details", "Patients", new { id = @join.Patient.PatientId })</li> 
      @using (Html.BeginForm("DeletePatient", "Doctors")) //deletepatient reference from doctorscontroller
      {
        @Html.Hidden("joinId", @join.DoctorPatientSpecialtyId) //joinId breaking relationship in join table
        @Html.Hidden("doctorId", Model.DoctorId);
        <input type="submit" value="Remove Patient From This Doctor" />
      }
    }
  </ul>
}

@if(@Model.PatientsSpecialties.Count() == 0)
{
  <p>This guy is completely unspecial</p>
}
else
{
  <h4>Specialties: </h4>
  <ul>
    @foreach(var join in Model.PatientsSpecialties)
    {
      <li>@Html.ActionLink($"{join.Specialty.Type}", "Details", "Specialties", new { id = @join.Specialty.SpecialtyId })</li>
      @using (Html.BeginForm("DeleteSpecialty", "Doctors"))
      {
        @Html.Hidden("joinId", @join.DoctorPatientSpecialtyId)
        @Html.Hidden("doctorId", Model.DoctorId);
        <input type="submit" value="Remove This Specialty" />
      }
    }
  </ul>
}

<p>@Html.ActionLink("Edit This Doctor", "Edit", new { id = Model.DoctorId })</p>
<p>@Html.ActionLink("Delete This Doctor", "Delete", new { id = Model.DoctorId })</p>
<p>@Html.ActionLink("Doctor's List", "Index")</p>
<p>@Html.ActionLink("Home", "Index", "Home")</p>